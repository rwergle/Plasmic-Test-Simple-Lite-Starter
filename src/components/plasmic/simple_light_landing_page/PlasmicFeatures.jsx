// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4MakZHdQd3q95LRebgUZR3
// Component: pMZzNAwcMUTO
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: gbTCQpu_SUx/component
import Section from "../../Section"; // plasmic-import: 0IttGat2HlU/component
import Bullet from "../../Bullet"; // plasmic-import: -GajfWeM6R9r/component
import LinkButton from "../../LinkButton"; // plasmic-import: shlIeUwhZVPb/component
import HomeCta from "../../HomeCta"; // plasmic-import: YAVEsIb01Kc/component
import Footer from "../../Footer"; // plasmic-import: N8vfYrtWIAZ/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: qTQ4juqycoIA/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css"; // plasmic-import: 4MakZHdQd3q95LRebgUZR3/projectcss
import * as sty from "./PlasmicFeatures.module.css"; // plasmic-import: pMZzNAwcMUTO/css
import simpleProjectKdEhFMzWyn from "./images/simpleProject.png"; // plasmic-import: kdEhF_-MzWyn/picture
import taskYsPzRtDqyxq from "./images/task.png"; // plasmic-import: YSPzRTDqyxq-/picture

export const PlasmicFeatures__VariantProps = new Array();

export const PlasmicFeatures__ArgProps = new Array();

function PlasmicFeatures__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___35LPj)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <Section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames("__wab_instance", sty.section)}
              subtitle={
                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
              }
              title={"The ultimate in feature set."}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jdqJ8)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__yVXn)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___8OnC
                  )}
                >
                  {"Powerful suite of tools"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__dzuqS
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__mjDxr)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__t8QqI)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__o1UTb)}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__lluIw
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__txix3)}
                >
                  <LinkButton text={"Start free trial"} type={"solidBlue"} />

                  <LinkButton text={"View demo"} type={"outlineBlue"} />
                </p.Stack>
              </p.Stack>

              <div className={classNames(defaultcss.all, sty.freeBox__dnaOk)}>
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__jHd)}
                  role={"img"}
                  src={simpleProjectKdEhFMzWyn}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__adJ8O)}
                  role={"img"}
                  src={taskYsPzRtDqyxq}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__nT3Kf)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__eNaiG)}>
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__k4D6T)}
                  role={"img"}
                  src={simpleProjectKdEhFMzWyn}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__qjYNr)}
                  role={"img"}
                  src={taskYsPzRtDqyxq}
                />
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__frKXr)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__bLlDl
                  )}
                >
                  {"Powerful suite of tools"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__eOKjl
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__eswos)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__uzqpR)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__ug9Je)}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__atnyH
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__buG2B)}
                >
                  <LinkButton text={"Start free trial"} type={"solidBlue"} />

                  <LinkButton text={"View demo"} type={"outlineBlue"} />
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <HomeCta
              data-plasmic-name={"homeCta"}
              data-plasmic-override={overrides.homeCta}
              className={classNames("__wab_instance", sty.homeCta)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "section", "homeCta", "footer"],
  header: ["header"],
  section: ["section"],
  homeCta: ["homeCta"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFeatures__ArgProps,
      internalVariantPropNames: PlasmicFeatures__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicFeatures__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFeatures";
  } else {
    func.displayName = `PlasmicFeatures.${nodeName}`;
  }
  return func;
}

export const PlasmicFeatures = Object.assign(
  // Top-level PlasmicFeatures renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    section: makeNodeComponent("section"),
    homeCta: makeNodeComponent("homeCta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicFeatures
    internalVariantProps: PlasmicFeatures__VariantProps,
    internalArgProps: PlasmicFeatures__ArgProps
  }
);

export default PlasmicFeatures;
/* prettier-ignore-end */
